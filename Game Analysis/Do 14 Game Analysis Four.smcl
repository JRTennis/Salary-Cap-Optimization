{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}C:/Users/Owner/OneDrive/Documents/Georgetown University/Thesis Writer/Research/QB Worth/Game Analysis/Do 14 Game Analysis Four.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}24 Aug 2025, 13:58:49
{txt}
{com}. clear all
{res}{txt}
{com}. scalar t1 = c(current_time)
{txt}
{com}. use "C:/Users/Owner/OneDrive/Documents/Georgetown University/Thesis Writer/Research/QB Worth/Game Analysis/Data 25 Final Dataset Four.dta"
{txt}
{com}. 
. foreach x in Rate ANYA TANYA FPA {c -(}
{txt}  2{com}.         foreach y in Game Season {c -(}
{txt}  3{com}.                 * Logit Regressions with Game and Season Variables
.                 quietly logit Win Diff`y'`x' DiffNonQBFantPt DiffHome DiffRestDays DifflogIM DiffSGini DiffSNSRatio DiffFE*, vce(cluster GameID)
{txt}  4{com}.                 * Generate Matrices for Coefs, Variances, and PseudoR2s
.                 quietly matrix `y'Coef`x' = e(b)
{txt}  5{com}.                 quietly matrix `y'Coef`x' = `y'Coef`x'[1,1..7]
{txt}  6{com}.                 quietly matrix `y'CoefV`x' = e(V)
{txt}  7{com}.                 quietly scalar `y'PseudoR2`x' = e(r2_p)
{txt}  8{com}.                 
.                 * Generate Marginal Effects
.                 quietly predict `y'xb`x', xb
{txt}  9{com}.                 quietly gen `y'Predict`x' = exp(`y'xb`x')/(exp(`y'xb`x')+1)
{txt} 10{com}.                 quietly gen `y'ME`x' = `y'Predict`x'*(1-`y'Predict`x')*`y'Coef`x'[1,1]
{txt} 11{com}.                 
.                 * Generate Variables and Matrices for AMEs and AME Variances
.                 quietly margins, dydx(Diff`y'`x' DiffNonQBFantPt DiffHome DiffRestDays DifflogIM DiffSGini DiffSNSRatio) post
{txt} 12{com}.                 quietly matrix `y'AME`x' = e(b)
{txt} 13{com}.                 quietly gen `y'AME`x' = `y'AME`x'[1,1]
{txt} 14{com}.                 quietly matrix `y'AMEV`x' = e(V)
{txt} 15{com}.                 
.                 * Calculate Logit Standard Errors
.                 quietly matrix `y'CoefVDiag`x' = vecdiag(`y'CoefV`x')
{txt} 16{com}.                 quietly local NColsCoef = colsof(`y'CoefVDiag`x')
{txt} 17{com}.                 quietly matrix `y'CoefSE`x' = J(1,`NColsCoef',.)
{txt} 18{com}.                 forvalues i = 1/`NColsCoef' {c -(}
{txt} 19{com}.                         quietly matrix `y'CoefSE`x'[1,`i'] = sqrt(`y'CoefVDiag`x'[1,`i'])
{txt} 20{com}.                 {c )-}
{txt} 21{com}.                 quietly matrix `y'CoefSE`x' = `y'CoefSE`x'[1,1..7]
{txt} 22{com}.                 
.                 * Calculate Logit AME Standard Errors
.                 quietly matrix `y'AMEVDiag`x' = vecdiag(`y'AMEV`x')
{txt} 23{com}.                 quietly local NColsAME = colsof(`y'AMEVDiag`x')
{txt} 24{com}.                 quietly matrix `y'AMESE`x' = J(1,`NColsAME',.)
{txt} 25{com}.                 forvalues i = 1/`NColsAME' {c -(}
{txt} 26{com}.                         quietly matrix `y'AMESE`x'[1,`i'] = sqrt(`y'AMEVDiag`x'[1,`i'])
{txt} 27{com}.                 {c )-}
{txt} 28{com}.                 quietly gen `y'AMESE`x' = `y'AMESE`x'[1,1]
{txt} 29{com}.                 
.                 * Linear Regressions with Game and Season Variables
.                 quietly reg Win Diff`y'`x' DiffNonQBFantPt DiffHome DiffRestDays DifflogIM DiffSGini DiffSNSRatio DiffFE*, vce(cluster GameID)
{txt} 30{com}.                 * Generate Matrices for Coefs, Variances, and R2s
.                 quietly matrix `y'Lin`x' = e(b)
{txt} 31{com}.                 quietly matrix `y'Lin`x' = `y'Lin`x'[1,1..7]
{txt} 32{com}.                 quietly matrix `y'LinV`x' = e(V)
{txt} 33{com}.                 quietly scalar `y'R2`x' = e(r2)
{txt} 34{com}.                 
.                 * Calculate Linear Standard Errors
.                 quietly matrix `y'LinVDiag`x' = vecdiag(`y'LinV`x')
{txt} 35{com}.                 quietly local NColsLin = colsof(`y'LinVDiag`x')
{txt} 36{com}.                 quietly matrix `y'LinSE`x' = J(1,`NColsLin',.)
{txt} 37{com}.                 forvalues i = 1/`NColsLin' {c -(}
{txt} 38{com}.                         quietly matrix `y'LinSE`x'[1,`i'] = sqrt(`y'LinVDiag`x'[1,`i'])
{txt} 39{com}.                 {c )-}
{txt} 40{com}.                 quietly matrix `y'LinSE`x' = `y'LinSE`x'[1,1..7]
{txt} 41{com}.         {c )-}
{txt} 42{com}.         
.         * Instrumental Variables
.         foreach z in "" "NoQ4" {c -(}
{txt} 43{com}.                 quietly ivregress 2sls Win (DiffGame`x' = DiffSeason`x'`z') DiffNonQBFantPt DiffHome DiffRestDays DifflogIM DiffSGini DiffSNSRatio DiffFE*, vce(cluster GameID)
{txt} 44{com}.                 * Generate Matrices for Coefs, Variances, and R2s
.                 quietly matrix IVLin`x'`z' = e(b)
{txt} 45{com}.                 quietly matrix IVLin`x'`z' = IVLin`x'`z'[1,1..7]
{txt} 46{com}.                 quietly matrix IVLinV`x'`z' = e(V)
{txt} 47{com}.                 quietly scalar IVR2`x'`z' = e(r2)
{txt} 48{com}.                 
.                 * Calculate IV Standard Errors
.                 quietly matrix IVLinVDiag`x'`z' = vecdiag(IVLinV`x'`z')
{txt} 49{com}.                 quietly local NColsIV = colsof(IVLinVDiag`x'`z')
{txt} 50{com}.                 quietly matrix IVLinSE`x'`z' = J(1,`NColsIV',.)
{txt} 51{com}.                 forvalues i = 1/`NColsIV' {c -(}
{txt} 52{com}.                         quietly matrix IVLinSE`x'`z'[1,`i'] = sqrt(IVLinVDiag`x'`z'[1,`i'])
{txt} 53{com}.                 {c )-}
{txt} 54{com}.                 quietly matrix IVLinSE`x'`z' = IVLinSE`x'`z'[1,1..7]
{txt} 55{com}.                 
.                 /* * First-Stage F Statistics
>                 quietly estat firststage
>                 quietly scalar IVF`x'`z' = r(singleresults)[1,4]
>                 disp "`x'`z' F = " IVF`x'`z'
>                 quietly scalar IVFp`x'`z' = r(singleresults)[1,7]
>                 disp "`x'`z' p = " IVFp`x'`z' */
.         {c )-}
{txt} 56{com}. {c )-}
{txt}
{com}. 
. * Make Tables
. foreach x in Rate ANYA TANYA FPA {c -(}
{txt}  2{com}.         matrix Table`x' = J(15,8,.)
{txt}  3{com}.         forvalues i = 1/7 {c -(}
{txt}  4{com}.                 quietly matrix Table`x'[2*`i'-1,1] = GameCoef`x'[1,`i']
{txt}  5{com}.                 quietly matrix Table`x'[2*`i',1] = GameCoefSE`x'[1,`i']
{txt}  6{com}.                 quietly matrix Table`x'[2*`i'-1,2] = GameAME`x'[1,`i']
{txt}  7{com}.                 quietly matrix Table`x'[2*`i',2] = GameAMESE`x'[1,`i']
{txt}  8{com}.                 quietly matrix Table`x'[2*`i'-1,3] = GameLin`x'[1,`i']
{txt}  9{com}.                 quietly matrix Table`x'[2*`i',3] = GameLinSE`x'[1,`i']
{txt} 10{com}.                 
.                 quietly matrix Table`x'[2*`i'-1,4] = SeasonCoef`x'[1,`i']
{txt} 11{com}.                 quietly matrix Table`x'[2*`i',4] = SeasonCoefSE`x'[1,`i']
{txt} 12{com}.                 quietly matrix Table`x'[2*`i'-1,5] = SeasonAME`x'[1,`i']
{txt} 13{com}.                 quietly matrix Table`x'[2*`i',5] = SeasonAMESE`x'[1,`i']
{txt} 14{com}.                 quietly matrix Table`x'[2*`i'-1,6] = SeasonLin`x'[1,`i']
{txt} 15{com}.                 quietly matrix Table`x'[2*`i',6] = SeasonLinSE`x'[1,`i']
{txt} 16{com}.                 
.                 quietly matrix Table`x'[2*`i'-1,7] = IVLin`x'[1,`i']
{txt} 17{com}.                 quietly matrix Table`x'[2*`i',7] = IVLinSE`x'[1,`i']
{txt} 18{com}.                 quietly matrix Table`x'[2*`i'-1,8] = IVLin`x'NoQ4[1,`i']
{txt} 19{com}.                 quietly matrix Table`x'[2*`i',8] = IVLinSE`x'NoQ4[1,`i']
{txt} 20{com}.         {c )-}
{txt} 21{com}.         quietly matrix Table`x'[15,1] = GamePseudoR2`x'
{txt} 22{com}.         quietly matrix Table`x'[15,3] = GameR2`x'
{txt} 23{com}.         quietly matrix Table`x'[15,4] = SeasonPseudoR2`x'
{txt} 24{com}.         quietly matrix Table`x'[15,6] = SeasonR2`x'
{txt} 25{com}.         quietly matrix Table`x'[15,7] = IVR2`x'
{txt} 26{com}.         quietly matrix Table`x'[15,8] = IVR2`x'NoQ4
{txt} 27{com}. {c )-}
{txt}
{com}. matrix list TableRate
{res}
{txt}TableRate[15,8]
             c1          c2          c3          c4          c5          c6          c7          c8
 r1 {res}  .06014984   .00464762   .00496782   .02474751    .0024806     .003517   .00834951   .00668387
{txt} r2 {res}  .00390354   .00023641   .00024829   .01231784   .00123366    .0011234   .00254349   .00330255
{txt} r3 {res}  .11426678    .0088291   .00673559    .1379976   .01383235   .01187368   .00311273   .00489715
{txt} r4 {res}  .00751203    .0004357   .00041762   .00643175   .00034911   .00031748    .0027492   .00355763
{txt} r5 {res}  .31634916   .02444349   .02047935   .29863736   .02993426   .02431285   .01818963   .01931742
{txt} r6 {res}  .07571465   .00575816   .00616675   .06100047   .00600523   .00657453   .00635454   .00641648
{txt} r7 {res}  .01508594   .00116565   .00122194   .01026952   .00102938   .00119607   .00111693   .00116866
{txt} r8 {res}  .02955035   .00228583   .00255522   .02394402   .00239981   .00270171   .00253298   .00248714
{txt} r9 {res} -.06106004  -.00471795  -.00504175  -.03528381  -.00353671  -.00272444  -.00748323  -.00628069
{txt}r10 {res}  .14425134   .01114092   .01210266   .11197359   .01122444   .01271431   .01228852   .01205478
{txt}r11 {res}  5.0420076   .38958294   .30212862   3.9787731    .3988169   .34701031   .29698614   .29951905
{txt}r12 {res}  2.0341164   .15686118   .17832453   1.7751552   .17802159   .19387816   .17488425   .17225262
{txt}r13 {res}     .30543   .02359979   .01408279   .18741569   .01878583    .0082917   .01876888   .01646077
{txt}r14 {res}  .27546914   .02131453    .0234643   .22777014   .02287072   .02512869   .02365187   .02331834
{txt}r15 {res}  .64368423           .   .56610983   .54557962           .   .50766872   .53837727   .55896842
{reset}
{com}. matrix list TableANYA
{res}
{txt}TableANYA[15,8]
             c1          c2          c3          c4          c5          c6          c7          c8
 r1 {res}  .60476108   .04670825   .04597197   .23986277   .02404197   .03034384    .0828007   .06190392
{txt} r2 {res}  .03838293   .00237333    .0023485   .10843387   .01087685   .01029704   .02758235    .0298169
{txt} r3 {res}  .10756772   .00830791   .00639653   .13796694   .01382873   .01187156    .0018613   .00443461
{txt} r4 {res}  .00761177   .00045879   .00042501   .00645222   .00035231   .00031866   .00342574   .00369102
{txt} r5 {res}   .3065333   .02367486   .02080922    .2983051   .02989978    .0242744   .01837878   .01975782
{txt} r6 {res}  .07350987   .00560356   .00617397   .06089463   .00599617   .00657408   .00640431   .00629922
{txt} r7 {res} -.00873569  -.00067469   .00038894   .01092132   .00109467   .00123676  -.00040197    .0000468
{txt} r8 {res}  .02932019   .00226211    .0025598   .02398031   .00240337    .0027053    .0026198   .00257436
{txt} r9 {res} -.12878609  -.00994669  -.00534725  -.03806427  -.00381527  -.00287902  -.00846529   -.0066961
{txt}r10 {res}  .14575157   .01124135   .01208957    .1117141   .01119855   .01271232   .01246581   .01203826
{txt}r11 {res}  5.2930923   .40880787     .307303   3.9574807   .39666699   .34117215   .30539627   .30647816
{txt}r12 {res}  2.0121351   .15465731    .1788048   1.7719546   .17775318   .19390818   .17670632   .17263356
{txt}r13 {res}  .14629399    .0112989    .0097796   .17781854   .01782314   .00701193   .01184714   .01067401
{txt}r14 {res}  .26806779   .02071595   .02349275   .22732136    .0228224   .02511197   .02368916   .02292772
{txt}r15 {res}  .64453891           .   .56267969    .5456826           .   .50750076   .52647132    .5559037
{reset}
{com}. matrix list TableTANYA
{res}
{txt}TableTANYA[15,8]
             c1          c2          c3          c4          c5          c6          c7          c8
 r1 {res}  .63111593   .04969566   .04686309   .25195296    .0252499   .03710047   .09306716   .06773448
{txt} r2 {res}  .03818149   .00252885   .00255599   .11806911   .01181688   .01050684   .02646004   .02599931
{txt} r3 {res}  .11250451   .00885889   .00691711   .13834441   .01386442   .01191749    .0018488   .00462764
{txt} r4 {res}  .00757813   .00045971   .00042781   .00643705   .00034887   .00031352   .00292489   .00287308
{txt} r5 {res}  .26119078   .02056682   .01869326   .29901435   .02996624   .02451403    .0136159    .0163997
{txt} r6 {res}  .07168782    .0055921   .00622603   .06092409   .00599802   .00657353   .00688435   .00666835
{txt} r7 {res} -.01277054  -.00100558    .0001485   .01088028   .00109039   .00116817  -.00106194  -.00039828
{txt} r8 {res}  .02761927    .0021723   .00256245   .02400394   .00240534   .00270752   .00266353   .00258504
{txt} r9 {res} -.09108921  -.00717259  -.00335967  -.03925691   -.0039342  -.00329387  -.00523743   -.0042079
{txt}r10 {res}  .13885326   .01092946   .01207424   .11144965   .01117053    .0126936   .01238096   .01183354
{txt}r11 {res}  3.8205734    .3008416    .2782157   3.8262924   .38345848   .33000737   .24719082   .26420108
{txt}r12 {res}  1.9897338   .15628697   .18062254   1.7679483   .17728454   .19349913   .18211234   .17597822
{txt}r13 {res}   .0604213   .00475773   .00927282   .16704642   .01674084   .00612225    .0113177   .01019653
{txt}r14 {res}   .2663584   .02098168    .0237527   .22645527   .02272946   .02508602   .02422407   .02323617
{txt}r15 {res}  .63744139           .   .55535231   .54570498           .   .50806579   .50763214   .54561488
{reset}
{com}. matrix list TableFPA
{res}
{txt}TableFPA[15,8]
             c1          c2          c3          c4          c5          c6          c7          c8
 r1 {res}  8.0990305   .61126033   .51799172   5.3916414   .53784919   .65293909   1.0174253   .76379353
{txt} r2 {res}  .49599394   .02952258   .02805874   1.5389004   .15247455   .14336435    .2147643   .20797474
{txt} r3 {res}   .1446786   .01091937   .00860416   .13927652   .01389368   .01198339   .00527435   .00696536
{txt} r4 {res}  .00795412   .00040062   .00037076   .00648482   .00034924   .00031002   .00148942   .00143261
{txt} r5 {res}  .22509495   .01698865   .01540142   .29998693   .02992553   .02442694   .00726225   .01139564
{txt} r6 {res}  .07406881   .00553967   .00622695   .06122371   .00599833    .0065583    .0071867   .00694172
{txt} r7 {res} -.00833576  -.00062913   .00054181   .00854489   .00085241   .00102147  -.00026269   .00014587
{txt} r8 {res}  .02920596   .00220284   .00258075    .0241022   .00240419   .00270212   .00260578   .00253279
{txt} r9 {res} -.18003417  -.01358777  -.00635464  -.04534548  -.00452349  -.00323575  -.01107862   -.0086796
{txt}r10 {res}   .1417185   .01069513   .01202242   .11183726   .01115797    .0126602   .01231166   .01183615
{txt}r11 {res}  4.7883851   .36139509   .26434453   3.6643848   .36554478   .31300751   .22063031   .24283009
{txt}r12 {res}  2.0820949   .15692746   .18114909    1.760696   .17578941   .19304049   .18198928   .17666018
{txt}r13 {res}  .00693335   .00052328    .0076783   .13392951   .01336029   .00422836   .00814065   .00790585
{txt}r14 {res}  .28007576    .0211395   .02374661   .22475867   .02244752   .02504489    .0240823   .02320391
{txt}r15 {res}  .65363148           .   .55627091   .54758239           .   .50947627   .50978038   .54500985
{reset}
{com}. 
. * Summary Statistics
. foreach y in "" "Win" "Loss" {c -(}
{txt}  2{com}.         foreach x in GameRate SeasonRate GameANYA SeasonANYA GameTANYA SeasonTANYA GameFPA SeasonFPA NonQBFantPt Home RestDays logIM SGini SNSRatio {c -(}
{txt}  3{com}.                 quietly sum `x' if "`y'" == ""
{txt}  4{com}.                 else if "`y'" != "" {c -(}
{txt}  5{com}.                         quietly sum `x' if `y' == 1
{txt}  6{com}.                 {c )-}
{txt}  7{com}.                 quietly scalar Mean`x'`y' = r(mean)
{txt}  8{com}.                 quietly scalar SD`x'`y' = r(sd)
{txt}  9{com}.                 quietly scalar Min`x'`y' = r(min)
{txt} 10{com}.                 quietly scalar Max`x'`y' = r(max)
{txt} 11{com}.         {c )-}
{txt} 12{com}. {c )-}
{txt}
{com}. 
. matrix Summary = J(42,4,.)
{txt}
{com}. local CountX = 0
{txt}
{com}. foreach x in "" "Win" "Loss" {c -(}
{txt}  2{com}.         quietly local CountY = 1
{txt}  3{com}.         foreach y in "Mean" "SD" "Min" "Max" {c -(}
{txt}  4{com}.                 quietly local CountZ = 0
{txt}  5{com}.                 foreach z in "Rate" "ANYA" "TANYA" "FPA" {c -(}
{txt}  6{com}.                         quietly matrix Summary[`CountZ'*2+1+`CountX'*14,`CountY'] = `y'Game`z'`x'
{txt}  7{com}.                         quietly matrix Summary[`CountZ'*2+2+`CountX'*14,`CountY'] = `y'Season`z'`x'
{txt}  8{com}.                         quietly local CountZ = `CountZ'+1
{txt}  9{com}.                 {c )-}
{txt} 10{com}.                 quietly matrix Summary[9+`CountX'*14,`CountY'] = `y'NonQBFantPt`x'
{txt} 11{com}.                 quietly matrix Summary[10+`CountX'*14,`CountY'] = `y'Home`x'
{txt} 12{com}.                 quietly matrix Summary[11+`CountX'*14,`CountY'] = `y'RestDays`x'
{txt} 13{com}.                 quietly matrix Summary[12+`CountX'*14,`CountY'] = `y'logIM`x'
{txt} 14{com}.                 quietly matrix Summary[13+`CountX'*14,`CountY'] = `y'SGini`x'
{txt} 15{com}.                 quietly matrix Summary[14+`CountX'*14,`CountY'] = `y'SNSRatio`x'
{txt} 16{com}.                 quietly local CountY = `CountY'+1
{txt} 17{com}.         {c )-}
{txt} 18{com}.         quietly local CountX = `CountX'+1
{txt} 19{com}. {c )-}
{txt}
{com}. matrix list Summary
{res}
{txt}Summary[42,4]
             c1          c2          c3          c4
 r1 {res}  90.615574   25.881058           0   158.33333
{txt} r2 {res}  90.011516   11.490511   41.830067   122.60827
{txt} r3 {res}  6.2777675   2.8007192  -6.4000001   19.608696
{txt} r4 {res}  6.1503773   1.1736016   1.1157025   9.4291162
{txt} r5 {res}  5.8948308   2.6054302    -10.8125   16.956522
{txt} r6 {res}  5.8096058   1.1119097   1.1928378   8.9816055
{txt} r7 {res}  .43988123   .20786881  -.47833332   1.4314286
{txt} r8 {res}  .43250713   .08909999   .07302857   .72041595
{txt} r9 {res}  67.386392   17.217896           4       155.2
{txt}r10 {res}         .5   .50003849           0           1
{txt}r11 {res}  6.9548953   2.8244447           3          17
{txt}r12 {res}  16.636744   .74203443   11.338834   18.337944
{txt}r13 {res}  .48043241   .05864972   .28676319   .69520438
{txt}r14 {res}  1.2194644   .48677331     .195002   4.0969539
{txt}r15 {res}  102.58634   23.518085   2.7777779   158.33333
{txt}r16 {res}  92.984759   10.942064    46.72271   122.60827
{txt}r17 {res}  7.5943713    2.594895  -3.4117646   19.608696
{txt}r18 {res}  6.4673527   1.1025134   1.8907104   9.4291162
{txt}r19 {res}   7.071798   2.3523557  -1.1904762   16.956522
{txt}r20 {res}  6.0954359   1.0381257   1.4064171   8.9816055
{txt}r21 {res}  .52601126   .20583315        .032   1.4314286
{txt}r22 {res}  .45354826   .08718224   .07302857   .72041595
{txt}r23 {res}  74.757759   15.530839           4       155.2
{txt}r24 {res}  .56096059   .49634631           0           1
{txt}r25 {res}  6.9741379   2.8547545           3          17
{txt}r26 {res}  16.593879   .73859523   11.338834   18.281101
{txt}r27 {res}  .47852551   .05858777   .28719735   .69520438
{txt}r28 {res}  1.2530051   .48935857     .195002   4.0969539
{txt}r29 {res}  78.644807   22.362413           0   150.48077
{txt}r30 {res}  87.038273   11.255656   41.830067   121.53042
{txt}r31 {res}  4.9611637   2.3428685  -6.4000001      13.125
{txt}r32 {res}   5.833402   1.1569621   1.1157025   9.3822937
{txt}r33 {res}  4.7178636   2.2964517    -10.8125   14.222222
{txt}r34 {res}  5.5237757   1.1099163   1.1928378   8.5495052
{txt}r35 {res}  .35375119   .17094903  -.47833332   1.1933334
{txt}r36 {res}  .41146599   .08598597   .07302857   .72041595
{txt}r37 {res}  60.015025     15.5913           6       122.3
{txt}r38 {res}  .43903941   .49634631           0           1
{txt}r39 {res}  6.9356527   2.7941132           3          17
{txt}r40 {res}   16.67961   .74310216   12.804909   18.337944
{txt}r41 {res}  .48233931   .05865864   .28676319   .67944425
{txt}r42 {res}  1.1859236   .48192013   .23773117   3.8073001
{reset}
{com}. 
. * Count effective number of observations and FEs
. gen Ones = 1
{txt}
{com}. egen CountPlayer = sum(Ones), by(FE Player)
{txt}
{com}. egen CountFE = sum(Ones), by(FE)
{txt}
{com}. gen Change = 0
{txt}
{com}. replace Change = 1 if CountPlayer < CountFE
{txt}(1,846 real changes made)

{com}. 
. gen Time = 1
{txt}
{com}. local NObs = _N
{txt}
{com}. forvalues i = 2/`NObs'{c -(}
{txt}  2{com}.         quietly replace Time in `i' = Time[`i'-1]+1 if FE[`i'-1] == FE[`i']
{txt}  3{com}.         quietly replace Time in `i' = 1 if FE[`i'-1] != FE[`i']
{txt}  4{com}. {c )-}
{txt}
{com}. 
. count if Change == 1
  {res}1,846
{txt}
{com}. local Num = r(N)
{txt}
{com}. count
  {res}6,496
{txt}
{com}. local Denom = r(N)
{txt}
{com}. disp `Num'/`Denom'*100
{res}28.417488
{txt}
{com}. 
. count if Change == 1 & Time == 1
  {res}126
{txt}
{com}. local Num = r(N)
{txt}
{com}. count if Time == 1
  {res}447
{txt}
{com}. local Denom = r(N)
{txt}
{com}. disp `Num'/`Denom'*100
{res}28.187919
{txt}
{com}. 
. export delimited Home GameMERate SeasonMERate GameMEANYA SeasonMEANYA GameMETANYA SeasonMETANYA GameMEFPA SeasonMEFPA using "C:/Users/Owner/OneDrive/Documents/Georgetown University/Thesis Writer/Research/QB Worth/Game Analysis/3 ME Histograms Four.csv", replace
{res}{txt}file {bf:C:/Users/Owner/OneDrive/Documents/Georgetown University/Thesis Writer/Research/QB Worth/Game Analysis/3 ME Histograms Four.csv} saved

{com}. scalar t2 = c(current_time)
{txt}
{com}. gen Runtime = cond(clock(t2,"hms")>=clock(t1,"hms"), (clock(t2,"hms")-clock(t1,"hms"))/60000, (clock(t2,"hms")+24*60*60*1000-clock(t1,"hms"))/60000)
{txt}
{com}. disp Runtime " minutes"
{res}5.5833335 minutes
{txt}
{com}. save "C:/Users/Owner/OneDrive/Documents/Georgetown University/Thesis Writer/Research/QB Worth/Season Analysis/Data 14 AME Four.dta", replace
{txt}{p 0 4 2}
file {bf}
C:/Users/Owner/OneDrive/Documents/Georgetown University/Thesis Writer/Research/QB Worth/Season Analysis/Data 14 AME Four.dta{rm}
saved
{p_end}

{com}. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}C:/Users/Owner/OneDrive/Documents/Georgetown University/Thesis Writer/Research/QB Worth/Game Analysis/Do 14 Game Analysis Four.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}24 Aug 2025, 14:04:24
{txt}{.-}
{smcl}
{txt}{sf}{ul off}